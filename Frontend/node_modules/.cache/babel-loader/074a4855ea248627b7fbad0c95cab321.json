{"ast":null,"code":"import { firebaseStorage } from \"./index\";\nimport * as Endpoint from \"../constants/Endpoint\";\nimport UploadWait from \"../components/uploadWait.js\";\n/**\n * upload a single image to firebaseStorage\n */\n\nexport default class ImageUploader {\n  /**\n   * @param imageFile the image file to be uploaded to firebase storage\n   * double check that it is an image.\n   * @param fileName please pass in a timestamp as a string followed by\n   * an image format such as 20191007201031.jpg.\n   */\n  constructor(imageFile, fileName, eventTitle, eventDate, eventTime, eventLocation) {\n    this.imageFile = \"\";\n    this.fileName = \"\";\n    this.imageURL = \"\";\n    this.eventTitle = \"\";\n    this.eventDate = \"\";\n    this.eventTime = \"\";\n    this.eventLocation = \"\";\n\n    this.sendImageToFirebaseStorage = async waiter => {\n      try {\n        const uploadTask = await firebaseStorage.ref(\"Images/\".concat(this.fileName)).put(this.imageFile);\n        const downloadURL = await uploadTask.ref.getDownloadURL();\n        this.imageURL = downloadURL;\n        fetch(process.env.REACT_APP_BACKEND_API + Endpoint.UPLOAD_IMAGE_METADATA, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            image_link: this.imageURL,\n            event_title: this.eventTitle,\n            event_date: this.eventDate,\n            event_time: this.eventTime,\n            event_location: this.eventLocation\n          })\n        }); // alert(\n        //   \"Image successfully uploaded, please return to the homepage to view it!\"\n        // );\n\n        waiter.endLoad(0);\n      } catch (error) {\n        // console.log(\"Unable to upload file: \" + this.fileName + \"\\n\" + error);\n        // alert(\"Uploading image failed!\");\n        waiter.endLoad(1);\n      }\n    };\n\n    this.getImageDownloadURL = () => {\n      return this.imageURL;\n    };\n\n    this.imageFile = imageFile;\n    this.fileName = fileName;\n    this.eventTitle = eventTitle;\n    this.eventDate = eventDate;\n    this.eventTime = eventTime;\n    this.eventLocation = eventLocation;\n  }\n\n}","map":{"version":3,"sources":["/Users/brianbalayon/Projects/442projects-loopholes/frontend/src/firebase/ImageUploader.js"],"names":["firebaseStorage","Endpoint","UploadWait","ImageUploader","constructor","imageFile","fileName","eventTitle","eventDate","eventTime","eventLocation","imageURL","sendImageToFirebaseStorage","waiter","uploadTask","ref","put","downloadURL","getDownloadURL","fetch","process","env","REACT_APP_BACKEND_API","UPLOAD_IMAGE_METADATA","method","headers","body","JSON","stringify","image_link","event_title","event_date","event_time","event_location","endLoad","error","getImageDownloadURL"],"mappings":"AAAA,SAASA,eAAT,QAAgC,SAAhC;AACA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA;;;;AAGA,eAAe,MAAMC,aAAN,CAAoB;AASjC;;;;;;AAMAC,EAAAA,WAAW,CACTC,SADS,EAETC,QAFS,EAGTC,UAHS,EAITC,SAJS,EAKTC,SALS,EAMTC,aANS,EAOT;AAAA,SArBFL,SAqBE,GArBU,EAqBV;AAAA,SApBFC,QAoBE,GApBS,EAoBT;AAAA,SAnBFK,QAmBE,GAnBS,EAmBT;AAAA,SAlBFJ,UAkBE,GAlBW,EAkBX;AAAA,SAjBFC,SAiBE,GAjBU,EAiBV;AAAA,SAhBFC,SAgBE,GAhBU,EAgBV;AAAA,SAfFC,aAeE,GAfc,EAed;;AAAA,SASFE,0BATE,GAS2B,MAAOC,MAAP,IAAkB;AAE7C,UAAI;AACF,cAAMC,UAAU,GAAG,MAAMd,eAAe,CACrCe,GADsB,kBACR,KAAKT,QADG,GAEtBU,GAFsB,CAElB,KAAKX,SAFa,CAAzB;AAGA,cAAMY,WAAW,GAAG,MAAMH,UAAU,CAACC,GAAX,CAAeG,cAAf,EAA1B;AACA,aAAKP,QAAL,GAAgBM,WAAhB;AACAE,QAAAA,KAAK,CACHC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoCrB,QAAQ,CAACsB,qBAD1C,EAEH;AACEC,UAAAA,MAAM,EAAE,MADV;AAEEC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAFX;AAGEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,UAAU,EAAE,KAAKlB,QADE;AAEnBmB,YAAAA,WAAW,EAAE,KAAKvB,UAFC;AAGnBwB,YAAAA,UAAU,EAAE,KAAKvB,SAHE;AAInBwB,YAAAA,UAAU,EAAE,KAAKvB,SAJE;AAKnBwB,YAAAA,cAAc,EAAE,KAAKvB;AALF,WAAf;AAHR,SAFG,CAAL,CANE,CAoBF;AACA;AACA;;AACAG,QAAAA,MAAM,CAACqB,OAAP,CAAe,CAAf;AACD,OAxBD,CAwBE,OAAOC,KAAP,EAAc;AACd;AACA;AACAtB,QAAAA,MAAM,CAACqB,OAAP,CAAe,CAAf;AACD;AACF,KAxCC;;AAAA,SA6CFE,mBA7CE,GA6CoB,MAAM;AAC1B,aAAO,KAAKzB,QAAZ;AACD,KA/CC;;AACA,SAAKN,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACD;;AA7BgC","sourcesContent":["import { firebaseStorage } from \"./index\";\nimport * as Endpoint from \"../constants/Endpoint\";\nimport UploadWait from \"../components/uploadWait.js\"\n\n/**\n * upload a single image to firebaseStorage\n */\nexport default class ImageUploader {\n  imageFile = \"\";\n  fileName = \"\";\n  imageURL = \"\";\n  eventTitle = \"\";\n  eventDate = \"\";\n  eventTime = \"\";\n  eventLocation = \"\";\n\n  /**\n   * @param imageFile the image file to be uploaded to firebase storage\n   * double check that it is an image.\n   * @param fileName please pass in a timestamp as a string followed by\n   * an image format such as 20191007201031.jpg.\n   */\n  constructor(\n    imageFile,\n    fileName,\n    eventTitle,\n    eventDate,\n    eventTime,\n    eventLocation\n  ) {\n    this.imageFile = imageFile;\n    this.fileName = fileName;\n    this.eventTitle = eventTitle;\n    this.eventDate = eventDate;\n    this.eventTime = eventTime;\n    this.eventLocation = eventLocation;\n  }\n\n  sendImageToFirebaseStorage = async (waiter) => {\n\n    try {\n      const uploadTask = await firebaseStorage\n        .ref(`Images/${this.fileName}`)\n        .put(this.imageFile);\n      const downloadURL = await uploadTask.ref.getDownloadURL();\n      this.imageURL = downloadURL;\n      fetch(\n        process.env.REACT_APP_BACKEND_API + Endpoint.UPLOAD_IMAGE_METADATA,\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            image_link: this.imageURL,\n            event_title: this.eventTitle,\n            event_date: this.eventDate,\n            event_time: this.eventTime,\n            event_location: this.eventLocation\n          })\n        }\n      );\n      // alert(\n      //   \"Image successfully uploaded, please return to the homepage to view it!\"\n      // );\n      waiter.endLoad(0);\n    } catch (error) {\n      // console.log(\"Unable to upload file: \" + this.fileName + \"\\n\" + error);\n      // alert(\"Uploading image failed!\");\n      waiter.endLoad(1);\n    }\n  };\n\n  /** @return a link to the image on firebase that will be stored in the\n   * image metadata.\n   */\n  getImageDownloadURL = () => {\n    return this.imageURL;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}