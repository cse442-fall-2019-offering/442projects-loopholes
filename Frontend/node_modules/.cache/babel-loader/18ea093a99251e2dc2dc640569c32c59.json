{"ast":null,"code":"var _jsxFileName = \"/Users/kaibus/Fall19/CSE442/UBulletinMain/UBulletin/442projects-loopholes/Frontend/src/components/homepage.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\nimport HomepageCard from \"./homepageCard\";\nimport * as Endpoint from \"../constants/Endpoint\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = (key, value) => {\n      this.setState({\n        [key]: value\n      });\n    };\n\n    this._handleKeyDown = e => {\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        this.searchForPosts();\n      }\n    };\n\n    this.onSearchButtonClick = () => {\n      this.searchForPosts();\n    };\n\n    this.searchForPosts = () => {\n      try {\n        fetch(process.env.REACT_APP_BACKEND_API + Endpoint.SEARCH_FOR_POSTS, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            search_value: this.state.searchValue,\n            card_metadatas: this.state.cardMetadatas\n          })\n        }).then(res => res.json()).then(data => {\n          this.setState({\n            displayedCardMetadatas: data\n          });\n        });\n      } catch (error) {\n        alert(\"Search failed.\");\n      }\n    };\n\n    this.state = {\n      cardMetadatas: [],\n      displayedCardMetadatas: [],\n      page: this.props.page,\n      searchValue: \"\",\n      imageLinks: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(process.env.REACT_APP_BACKEND_API + Endpoint.GET_HOMEPAGE_IMAGE_METADATA).then(res => res.json()).then(data => {\n      let cardMetadatas = Object.values(data).map(datum => {\n        const event_info = datum.event_info,\n              image_link = datum.image_link;\n\n        if (event_info) {\n          let title = event_info.title,\n              date = event_info.date,\n              time = event_info.time,\n              location = event_info.location;\n          return {\n            imageLink: image_link,\n            eventTitle: title,\n            eventDate: date,\n            eventTime: time,\n            eventLocation: location\n          };\n        }\n\n        return {\n          imageLink: image_link\n        };\n      });\n      this.setState({\n        cardMetadatas,\n        displayedCardMetadatas: cardMetadatas\n      });\n    });\n  }\n\n  render() {\n    let cards = this.state.displayedCardMetadatas.map(metadata => React.createElement(HomepageCard, Object.assign({}, metadata, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Form, {\n      className: \"ml-2 mt-2 mb-2\",\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      type: \"text\",\n      onChange: e => this.changeHandler(\"searchValue\", e.target.value),\n      onKeyDown: this._handleKeyDown,\n      placeholder: \"Search for posts\",\n      value: this.state.searchValue,\n      className: \"mr-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.onSearchButtonClick,\n      variant: \"outline-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Search\")), React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, cards));\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/kaibus/Fall19/CSE442/UBulletinMain/UBulletin/442projects-loopholes/Frontend/src/components/homepage.js"],"names":["React","CardColumns","HomepageCard","Endpoint","Form","FormControl","Button","HomePage","Component","constructor","props","changeHandler","key","value","setState","_handleKeyDown","e","preventDefault","searchForPosts","onSearchButtonClick","fetch","process","env","REACT_APP_BACKEND_API","SEARCH_FOR_POSTS","method","headers","body","JSON","stringify","search_value","state","searchValue","card_metadatas","cardMetadatas","then","res","json","data","displayedCardMetadatas","error","alert","page","imageLinks","componentDidMount","GET_HOMEPAGE_IMAGE_METADATA","Object","values","map","datum","event_info","image_link","title","date","time","location","imageLink","eventTitle","eventDate","eventTime","eventLocation","render","cards","metadata","target"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\nimport HomepageCard from \"./homepageCard\";\nimport * as Endpoint from \"../constants/Endpoint\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardMetadatas: [],\n      displayedCardMetadatas: [],\n      page: this.props.page,\n      searchValue: \"\",\n      imageLinks: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      process.env.REACT_APP_BACKEND_API + Endpoint.GET_HOMEPAGE_IMAGE_METADATA\n    )\n      .then(res => res.json())\n      .then(data => {\n        let cardMetadatas = Object.values(data).map(datum => {\n          const { event_info, image_link } = datum;\n          if (event_info) {\n            let { title, date, time, location } = event_info;\n            return {\n              imageLink: image_link,\n              eventTitle: title,\n              eventDate: date,\n              eventTime: time,\n              eventLocation: location\n            };\n          }\n          return {\n            imageLink: image_link\n          };\n        });\n        this.setState({ cardMetadatas, displayedCardMetadatas: cardMetadatas });\n      });\n  }\n\n  changeHandler = (key, value) => {\n    this.setState({ [key]: value });\n  };\n\n  _handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      this.searchForPosts();\n    }\n  };\n\n  onSearchButtonClick = () => {\n    this.searchForPosts();\n  };\n\n  searchForPosts = () => {\n    try {\n      fetch(process.env.REACT_APP_BACKEND_API + Endpoint.SEARCH_FOR_POSTS, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          search_value: this.state.searchValue,\n          card_metadatas: this.state.cardMetadatas\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          this.setState({ displayedCardMetadatas: data });\n        });\n    } catch (error) {\n      alert(\"Search failed.\");\n    }\n  };\n\n  render() {\n    let cards = this.state.displayedCardMetadatas.map(metadata => (\n      <HomepageCard {...metadata} />\n    ));\n\n    return (\n      <div>\n        <Form className=\"ml-2 mt-2 mb-2\" inline>\n          <FormControl\n            type=\"text\"\n            onChange={e => this.changeHandler(\"searchValue\", e.target.value)}\n            onKeyDown={this._handleKeyDown}\n            placeholder=\"Search for posts\"\n            value={this.state.searchValue}\n            className=\"mr-sm-2\"\n          />\n          <Button onClick={this.onSearchButtonClick} variant=\"outline-primary\">\n            Search\n          </Button>\n        </Form>\n        <CardColumns>{cards}</CardColumns>\n      </div>\n    );\n  }\n}\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}