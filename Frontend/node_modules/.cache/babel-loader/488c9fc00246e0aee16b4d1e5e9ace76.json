{"ast":null,"code":"var _jsxFileName = \"/Users/kaibus/Fall19/CSE442/UBulletinMain/UBulletin/442projects-loopholes/Frontend/src/components/uploadpage.js\";\nimport React from \"react\";\nimport ImageUploader from \"../firebase/ImageUploader\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass UploadPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eventTitle: \"\",\n      eventDate: \"\",\n      eventTime: \"\",\n      eventLocation: \"\"\n    };\n\n    this.choseFileHandler = event => {\n      this._imgToUpload = event.target.files[0];\n      var td = new Date();\n      var yr = td.getFullYear();\n      var mon = String(td.getMonth() + 1).padStart(2, \"0\");\n      var day = String(td.getDate()).padStart(2, \"0\");\n      var hr = String(td.getHours());\n      var min = String(td.getMinutes());\n      var sec = String(td.getSeconds());\n      this._nameToUpload = yr + mon + day + hr + min + sec;\n    };\n\n    this.startUpload = () => {\n      const _this$state = this.state,\n            eventTitle = _this$state.eventTitle,\n            eventDate = _this$state.eventDate,\n            eventTime = _this$state.eventTime,\n            eventLocation = _this$state.eventLocation;\n      let sender = new ImageUploader(this._imgToUpload, this._nameToUpload, eventTitle, eventDate, eventTime, eventLocation);\n      sender.sendImageToFirebaseStorage();\n    };\n\n    this.onTextInputChange = (key, e) => {\n      this.setState({\n        [key]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          eventTitle = _this$state2.eventTitle,\n          eventDate = _this$state2.eventDate,\n          eventTime = _this$state2.eventTime,\n          eventLocation = _this$state2.eventLocation;\n    return React.createElement(\"div\", {\n      className: \"page_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \" Upload a File to Make a Post \"), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.choseFileHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.onTextInputChange(\"eventTitle\", e),\n      value: eventTitle,\n      placeholder: \"Event Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.onTextInputChange(\"eventDate\", e),\n      value: eventDate,\n      placeholder: \"Event Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.onTextInputChange(\"eventTime\", e),\n      value: eventTime,\n      placeholder: \"Event Time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.onTextInputChange(\"eventLocation\", e),\n      value: eventLocation,\n      placeholder: \"Event Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.startUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Upload\"));\n  }\n\n}\n\nexport default UploadPage;","map":{"version":3,"sources":["/Users/kaibus/Fall19/CSE442/UBulletinMain/UBulletin/442projects-loopholes/Frontend/src/components/uploadpage.js"],"names":["React","ImageUploader","UploadPage","Component","state","eventTitle","eventDate","eventTime","eventLocation","choseFileHandler","event","_imgToUpload","target","files","td","Date","yr","getFullYear","mon","String","getMonth","padStart","day","getDate","hr","getHours","min","getMinutes","sec","getSeconds","_nameToUpload","startUpload","sender","sendImageToFirebaseStorage","onTextInputChange","key","e","setState","value","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ImageUploader from \"../firebase/ImageUploader\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass UploadPage extends React.Component {\n  state = {\n    eventTitle: \"\",\n    eventDate: \"\",\n    eventTime: \"\",\n    eventLocation: \"\"\n  };\n\n  choseFileHandler = event => {\n    this._imgToUpload = event.target.files[0];\n    var td = new Date();\n    var yr = td.getFullYear();\n    var mon = String(td.getMonth() + 1).padStart(2, \"0\");\n    var day = String(td.getDate()).padStart(2, \"0\");\n    var hr = String(td.getHours());\n    var min = String(td.getMinutes());\n    var sec = String(td.getSeconds());\n    this._nameToUpload = yr + mon + day + hr + min + sec;\n  };\n\n  startUpload = () => {\n    const { eventTitle, eventDate, eventTime, eventLocation } = this.state;\n    let sender = new ImageUploader(\n      this._imgToUpload,\n      this._nameToUpload,\n      eventTitle,\n      eventDate,\n      eventTime,\n      eventLocation\n    );\n    sender.sendImageToFirebaseStorage();\n  };\n\n  onTextInputChange = (key, e) => {\n    this.setState({ [key]: e.target.value });\n  };\n\n  render() {\n    const { eventTitle, eventDate, eventTime, eventLocation } = this.state;\n    return (\n      <div className={\"page_content\"}>\n        <h1> Upload a File to Make a Post </h1>\n        <input type=\"file\" onChange={this.choseFileHandler} />\n        <input\n          type=\"text\"\n          onChange={e => this.onTextInputChange(\"eventTitle\", e)}\n          value={eventTitle}\n          placeholder={\"Event Title\"}\n        />\n        <input\n          type=\"text\"\n          onChange={e => this.onTextInputChange(\"eventDate\", e)}\n          value={eventDate}\n          placeholder={\"Event Date\"}\n        />\n        <input\n          type=\"text\"\n          onChange={e => this.onTextInputChange(\"eventTime\", e)}\n          value={eventTime}\n          placeholder={\"Event Time\"}\n        />\n        <input\n          type=\"text\"\n          onChange={e => this.onTextInputChange(\"eventLocation\", e)}\n          value={eventLocation}\n          placeholder={\"Event Location\"}\n        />\n        <button onClick={this.startUpload}>Upload</button>\n      </div>\n    );\n  }\n}\n\nexport default UploadPage;\n"]},"metadata":{},"sourceType":"module"}