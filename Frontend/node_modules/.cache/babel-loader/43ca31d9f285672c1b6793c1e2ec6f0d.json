{"ast":null,"code":"var _jsxFileName = \"/Users/brianbalayon/Projects/442projects-loopholes/frontend/src/components/uploadWait.js\";\nimport React, { useState } from \"react\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\n\nclass UploadWait extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      waiting: true,\n      loading: false,\n      done: false,\n      failed: false\n    };\n    this.resetState();\n  }\n\n  isWaiting() {\n    alert(\"WHY\");\n    return this.state.waiting;\n  }\n\n  resetState() {\n    alert(\"1\");\n    this.setState({\n      waiting: true,\n      loading: false,\n      done: false,\n      failed: false\n    });\n    alert(\"0\");\n  }\n\n  startLoad() {\n    //alert(\"hi\");\n    this.setState({\n      waiting: false,\n      loading: true\n    });\n    alert(\"start\");\n  }\n\n  endLoad(i) {\n    if (i === 0) {\n      this.setState({\n        loading: false,\n        done: true\n      });\n      alert(\"Nice\");\n    } else {\n      this.setState({\n        loading: false,\n        failed: true\n      });\n      alert(\"Oh\");\n    }\n  }\n\n  renderStatus() {\n    if (!this.state.progress.localeCompare(\"waiting\")) {\n      return null;\n    }\n\n    if (!this.state.progress.localeCompare(\"loading\")) {\n      return React.createElement(\"div\", {\n        className: \"load_overlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Loading...\")));\n    } else if (!this.state.progress.localeCompare(\"done\")) {\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Upload Complete!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \" Go to the homepage to see your upload! \"), React.createElement(Link, {\n        to: \"/CSE442-542/2019-Fall/cse-442i/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Home\"))));\n    } else if (!this.state.progress.localeCompare(\"failed\")) {\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Upload Failed\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \" \", this.state.progress, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \" Try uploading again! \"), React.createElement(Link, {\n        to: \"/CSE442-542/2019-Fall/cse-442i/upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.resetState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Upload\")), React.createElement(Link, {\n        to: \"/CSE442-542/2019-Fall/cse-442i/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.resetState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Home\"))));\n    }\n\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" YEO \");\n  }\n\n}\n\nexport default UploadWait;","map":{"version":3,"sources":["/Users/brianbalayon/Projects/442projects-loopholes/frontend/src/components/uploadWait.js"],"names":["React","useState","Spinner","Button","Link","Jumbotron","Container","UploadWait","Component","constructor","props","state","waiting","loading","done","failed","resetState","isWaiting","alert","setState","startLoad","endLoad","i","renderStatus","progress","localeCompare"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport {Link} from 'react-router-dom';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\n\n\nclass UploadWait extends React.Component {\n\n    state = {\n        waiting: true,\n        loading: false,\n        done: false,\n        failed: false\n    };\n\n    constructor(props) {\n        super(props);\n        this.resetState();\n    }\n\n    isWaiting() {\n        alert(\"WHY\");\n        return this.state.waiting;\n    }\n\n    resetState() {\n        alert(\"1\");\n        this.setState({\n                waiting: true,\n                loading: false,\n                done: false,\n                failed: false\n            });\n        alert(\"0\");\n    }\n\n    startLoad() {\n        //alert(\"hi\");\n        this.setState({\n            waiting: false,\n            loading: true\n        });\n        alert(\"start\");\n    }\n\n    endLoad(i) {\n        if (i === 0) {\n            this.setState({\n                loading: false,\n                done: true\n            });\n            alert(\"Nice\")\n        } else {\n            this.setState({\n                loading: false,\n                failed: true\n            });\n            alert(\"Oh\")\n        }\n    }\n\n    renderStatus() {\n        if (!(this.state.progress.localeCompare(\"waiting\"))) {\n            return null;\n        }\n        if (!(this.state.progress.localeCompare(\"loading\"))) {\n            return (\n                <div className={\"load_overlay\"}>\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </div>\n            );\n        } else if (!(this.state.progress.localeCompare(\"done\"))) {\n            return (\n                <Jumbotron fluid>\n                    <Container>\n                        <h1>Upload Complete!</h1>\n                        <p> Go to the homepage to see your upload! </p>\n                        <Link to=\"/CSE442-542/2019-Fall/cse-442i/home\">\n                            <Button variant=\"primary\">Home</Button>\n                        </Link>\n                    </Container>\n                </Jumbotron>\n            );\n        } else if (!(this.state.progress.localeCompare(\"failed\"))) {\n            return (\n                <Jumbotron fluid>\n                    <Container>\n                        <h1>Upload Failed</h1>\n                        <p> { this.state.progress } </p>\n                        <p> Try uploading again! </p>\n                        <Link to=\"/CSE442-542/2019-Fall/cse-442i/upload\">\n                            <Button onClick={this.resetState()}>Upload</Button>\n                        </Link>\n                        <Link to=\"/CSE442-542/2019-Fall/cse-442i/home\">\n                            <Button onClick={this.resetState()}>Home</Button>\n                        </Link>\n                    </Container>\n                </Jumbotron>\n            );\n        }\n        return (<p> YEO </p>);\n    }\n\n}\n\nexport default UploadWait;\n"]},"metadata":{},"sourceType":"module"}