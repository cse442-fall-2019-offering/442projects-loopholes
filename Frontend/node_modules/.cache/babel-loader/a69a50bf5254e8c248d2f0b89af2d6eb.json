{"ast":null,"code":"var _jsxFileName = \"/Users/brianbalayon/Projects/442projects-loopholes/frontend/src/components/uploadWait.js\";\nimport React from \"react\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\n\nclass UploadWait extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: \"waiting\"\n    };\n  }\n\n  startLoad() {\n    alert(\"hi\");\n    this.state.progress = \"loading\";\n    alert(this.state.progress);\n    document.getElementById(\"root\").style.height = \"100%\";\n  }\n\n  endLoad(i) {\n    if (i === 0) {\n      this.state.progress = \"done\";\n      alert(\"Nice\");\n    } else {\n      this.state.progress = \"failed\";\n      alert(\"Oh\");\n    }\n\n    document.getElementById(\"root\").style.height = \"0%\";\n  }\n\n  render() {\n    if (this.state.progress === \"loading\") {\n      return React.createElement(\"div\", {\n        className: \"load_overlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Loading...\")));\n    } else if (this.state.progress === \"done\") {\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Upload Complete!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \" Go to the homepage to see your upload! \"), React.createElement(Link, {\n        to: \"/CSE442-542/2019-Fall/cse-442i/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Home\"))));\n    }\n\n    return React.createElement(Jumbotron, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Upload Failed\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" Please try uploading again! \"), React.createElement(Link, {\n      to: \"/CSE442-542/2019-Fall/cse-442i/upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Upload\"))));\n  }\n\n}\n\nexport default UploadWait;","map":{"version":3,"sources":["/Users/brianbalayon/Projects/442projects-loopholes/frontend/src/components/uploadWait.js"],"names":["React","Spinner","Button","Link","Jumbotron","Container","UploadWait","Component","constructor","props","state","progress","startLoad","alert","document","getElementById","style","height","endLoad","i","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport {Link} from 'react-router-dom';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\n\n\nclass UploadWait extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            progress: \"waiting\"\n        };\n    }\n\n    startLoad() {\n        alert(\"hi\");\n        this.state.progress = \"loading\";\n        alert(this.state.progress);\n        document.getElementById(\"root\").style.height = \"100%\";\n    }\n\n    endLoad(i) {\n        if(i===0) {\n            this.state.progress = \"done\";\n            alert(\"Nice\")\n        } else {\n            this.state.progress = \"failed\";\n            alert(\"Oh\")\n        }\n        document.getElementById(\"root\").style.height = \"0%\";\n    }\n\n    render() {\n        if (this.state.progress === \"loading\") {\n            return (\n                <div className={\"load_overlay\"}>\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </div>\n            );\n        } else if (this.state.progress === \"done\") {\n            return (\n                <Jumbotron fluid>\n                    <Container>\n                        <h1>Upload Complete!</h1>\n                        <p> Go to the homepage to see your upload! </p>\n                        <Link to=\"/CSE442-542/2019-Fall/cse-442i/home\">\n                            <Button variant=\"primary\">Home</Button>\n                        </Link>\n                    </Container>\n                </Jumbotron>\n            )\n        }\n        return (\n            <Jumbotron fluid>\n                <Container>\n                    <h1>Upload Failed</h1>\n                    <p> Please try uploading again! </p>\n                    <Link to=\"/CSE442-542/2019-Fall/cse-442i/upload\">\n                        <Button variant=\"primary\">Upload</Button>\n                    </Link>\n                </Container>\n            </Jumbotron>\n        )\n    }\n\n}\n\nexport default UploadWait;\n"]},"metadata":{},"sourceType":"module"}