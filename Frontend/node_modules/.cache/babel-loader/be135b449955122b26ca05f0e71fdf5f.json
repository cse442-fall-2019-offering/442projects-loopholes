{"ast":null,"code":"var _jsxFileName = \"/Users/brianbalayon/Projects/442projects-loopholes/frontend/src/components/uploadWait.js\";\nimport React from \"react\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport Link from \"react-router-dom/modules/Link\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\n\nclass UploadWait extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: \"done\"\n    };\n  }\n\n  startLoad() {\n    this.setState({\n      progress: \"loading\"\n    });\n    document.getElementById(\"home_page\").style.height = \"100%\";\n  }\n\n  endLoad(i) {\n    if (i === 0) {\n      this.setState({\n        progress: \"done\"\n      });\n    } else {\n      this.setState({\n        progress: \"failed\"\n      });\n    }\n\n    document.getElementById(\"home_page\").style.height = \"0%\";\n  }\n\n  render() {\n    if (this.state.progress === \"loading\") {\n      return React.createElement(\"div\", {\n        className: \"load_overlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Loading...\")));\n    }\n  }\n\n}\n\nexport default UploadWait;","map":{"version":3,"sources":["/Users/brianbalayon/Projects/442projects-loopholes/frontend/src/components/uploadWait.js"],"names":["React","Spinner","Button","Link","Jumbotron","Container","UploadWait","Component","constructor","props","state","progress","startLoad","setState","document","getElementById","style","height","endLoad","i","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAGA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDC,EAAAA,SAAS,GAAG;AACR,SAAKC,QAAL,CAAc;AAACF,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACAG,IAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,MAA3C,GAAoD,MAApD;AACH;;AAEDC,EAAAA,OAAO,CAACC,CAAD,EAAI;AACP,QAAGA,CAAC,KAAG,CAAP,EAAU;AACN,WAAKN,QAAL,CAAc;AAACF,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACH,KAFD,MAEO;AACH,WAAKE,QAAL,CAAc;AAACF,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACH;;AACDG,IAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,MAA3C,GAAoD,IAApD;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKV,KAAL,CAAWC,QAAX,KAAwB,SAA5B,EAAuC;AACnC,aACI;AAAK,QAAA,SAAS,EAAE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,CADJ;AAOH;AACJ;;AAjCoC;;AAqCzC,eAAeL,UAAf","sourcesContent":["import React from \"react\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport Link from \"react-router-dom/modules/Link\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\n\n\nclass UploadWait extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            progress: \"done\"\n        };\n    }\n\n    startLoad() {\n        this.setState({progress: \"loading\"});\n        document.getElementById(\"home_page\").style.height = \"100%\";\n    }\n\n    endLoad(i) {\n        if(i===0) {\n            this.setState({progress: \"done\"});\n        } else {\n            this.setState({progress: \"failed\"});\n        }\n        document.getElementById(\"home_page\").style.height = \"0%\";\n    }\n\n    render() {\n        if (this.state.progress === \"loading\") {\n            return (\n                <div className={\"load_overlay\"}>\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </div>\n            );\n        }\n    }\n\n}\n\nexport default UploadWait;\n"]},"metadata":{},"sourceType":"module"}