{"ast":null,"code":"var _jsxFileName = \"/Users/brianbalayon/Projects/442projects-loopholes/frontend/src/components/uploadpage.js\";\nimport React from \"react\";\nimport ImageUploader from \"../firebase/ImageUploader\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport UploadWait from \"./uploadWait.js\";\nimport Button from 'react-bootstrap/Button';\n\nclass UploadPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      eventTitle: \"\",\n      eventDate: \"\",\n      eventTime: \"\",\n      eventLocation: \"\"\n    };\n    this.waiter = new UploadWait();\n\n    this.choseFileHandler = event => {\n      this._imgToUpload = event.target.files[0];\n      var td = new Date();\n      var yr = td.getFullYear();\n      var mon = String(td.getMonth() + 1).padStart(2, \"0\");\n      var day = String(td.getDate()).padStart(2, \"0\");\n      var hr = String(td.getHours());\n      var min = String(td.getMinutes());\n      var sec = String(td.getSeconds());\n      this._nameToUpload = yr + mon + day + hr + min + sec;\n    };\n\n    this.startUpload = () => {\n      const _this$state = this.state,\n            eventTitle = _this$state.eventTitle,\n            eventDate = _this$state.eventDate,\n            eventTime = _this$state.eventTime,\n            eventLocation = _this$state.eventLocation;\n      let sender = new ImageUploader(this._imgToUpload, this._nameToUpload, eventTitle, eventDate, eventTime, eventLocation);\n      this.waiter.startLoad();\n      sender.sendImageToFirebaseStorage(this.waiter);\n    };\n\n    this.onTextInputChange = (key, e) => {\n      this.setState({\n        [key]: e.target.value\n      });\n    };\n  }\n\n  renderSelector() {\n    if (this.waiter.state.progress > 0) {\n      return null;\n    } else {\n      const _this$state2 = this.state,\n            eventTitle = _this$state2.eventTitle,\n            eventDate = _this$state2.eventDate,\n            eventTime = _this$state2.eventTime,\n            eventLocation = _this$state2.eventLocation;\n      return React.createElement(\"div\", {\n        className: \"page_content\",\n        id: \"upload_page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \" \", this.waiter.state.progress, \" \"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \" Upload a File to Make a Post \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.choseFileHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Enter a title for your post\"), React.createElement(Form.Check, {\n        inline: true,\n        text: \"dark\",\n        type: \"checkbox\",\n        label: \"No title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        onChange: e => this.onTextInputChange(\"eventTitle\", e),\n        value: eventTitle,\n        placeholder: \"Enter title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Enter a date for your post\"), React.createElement(Form.Check, {\n        inline: true,\n        text: \"dark\",\n        type: \"checkbox\",\n        label: \"No date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        onChange: e => this.onTextInputChange(\"eventDate\", e),\n        value: eventDate,\n        placeholder: \"Enter date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Enter a time for your post\"), React.createElement(Form.Check, {\n        inline: true,\n        text: \"dark\",\n        type: \"checkbox\",\n        label: \"No time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        onChange: e => this.onTextInputChange(\"eventTime\", e),\n        value: eventTime,\n        placeholder: \"Enter time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Enter a location for your post\"), React.createElement(Form.Check, {\n        inline: true,\n        text: \"dark\",\n        type: \"checkbox\",\n        label: \"No location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        onChange: e => this.onTextInputChange(\"eventLocation\", e),\n        value: eventLocation,\n        placeholder: \"Enter location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.startUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Upload\"));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.renderSelector(), this.waiter.renderStatus());\n  }\n\n}\n\nexport default UploadPage;","map":{"version":3,"sources":["/Users/brianbalayon/Projects/442projects-loopholes/frontend/src/components/uploadpage.js"],"names":["React","ImageUploader","Form","Col","Row","UploadWait","Button","UploadPage","Component","constructor","props","state","eventTitle","eventDate","eventTime","eventLocation","waiter","choseFileHandler","event","_imgToUpload","target","files","td","Date","yr","getFullYear","mon","String","getMonth","padStart","day","getDate","hr","getHours","min","getMinutes","sec","getSeconds","_nameToUpload","startUpload","sender","startLoad","sendImageToFirebaseStorage","onTextInputChange","key","e","setState","value","renderSelector","progress","render","renderStatus"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ImageUploader from \"../firebase/ImageUploader\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport UploadWait from \"./uploadWait.js\";\nimport Button from 'react-bootstrap/Button'\n\nclass UploadPage extends React.Component {\n\n    state = {\n        eventTitle: \"\",\n        eventDate: \"\",\n        eventTime: \"\",\n        eventLocation: \"\"\n    };\n\n    waiter = new UploadWait();\n    \n    constructor(props) {\n        super(props);\n    }\n\n    choseFileHandler = event => {\n        this._imgToUpload = event.target.files[0];\n        var td = new Date();\n        var yr = td.getFullYear();\n        var mon = String(td.getMonth() + 1).padStart(2, \"0\");\n        var day = String(td.getDate()).padStart(2, \"0\");\n        var hr = String(td.getHours());\n        var min = String(td.getMinutes());\n        var sec = String(td.getSeconds());\n        this._nameToUpload = yr + mon + day + hr + min + sec;\n    };\n\n    startUpload = () => {\n        const {eventTitle, eventDate, eventTime, eventLocation} = this.state;\n        let sender = new ImageUploader(\n            this._imgToUpload,\n            this._nameToUpload,\n            eventTitle,\n            eventDate,\n            eventTime,\n            eventLocation\n        );\n        this.waiter.startLoad();\n        sender.sendImageToFirebaseStorage(this.waiter);\n    };\n\n    onTextInputChange = (key, e) => {\n        this.setState({[key]: e.target.value});\n    };\n\n    renderSelector() {\n        if (this.waiter.state.progress > 0) {\n            return null;\n        } else {\n            const {eventTitle, eventDate, eventTime, eventLocation} = this.state;\n            return (\n                <div className={\"page_content\"} id=\"upload_page\">\n                    <h1> { this.waiter.state.progress } </h1>\n                    <h1> Upload a File to Make a Post </h1><br></br>\n                    <input type=\"file\" onChange={this.choseFileHandler}/><br></br>\n                    <br></br>\n                    <Form>\n                        <Form.Row>\n                            <Form.Label column sm=\"3\">Enter a title for your post</Form.Label>\n                            <Form.Check inline text=\"dark\" type=\"checkbox\" label=\"No title\"/>\n                        </Form.Row>\n                        <Form.Row>\n                            <Col sm={7}>\n                                <Form.Control\n                                    type=\"text\"\n                                    onChange={e => this.onTextInputChange(\"eventTitle\", e)}\n                                    value={eventTitle}\n                                    placeholder=\"Enter title\"/>\n                            </Col>\n                        </Form.Row>\n                        <br></br>\n                        <Form.Row>\n                            <Form.Label column sm=\"3\">Enter a date for your post</Form.Label>\n                            <Form.Check inline text=\"dark\" type=\"checkbox\" label=\"No date\"/>\n                        </Form.Row>\n                        <Form.Row>\n                            <Col sm={7}>\n                                <Form.Control\n                                    type=\"text\"\n                                    onChange={e => this.onTextInputChange(\"eventDate\", e)}\n                                    value={eventDate}\n                                    placeholder=\"Enter date\"/>\n                            </Col>\n                        </Form.Row>\n                        <br></br>\n                        <Form.Row>\n                            <Form.Label column sm=\"3\">Enter a time for your post</Form.Label>\n                            <Form.Check inline text=\"dark\" type=\"checkbox\" label=\"No time\"/>\n                        </Form.Row>\n                        <Form.Row>\n                            <Col sm={7}>\n                                <Form.Control\n                                    type=\"text\"\n                                    onChange={e => this.onTextInputChange(\"eventTime\", e)}\n                                    value={eventTime}\n                                    placeholder=\"Enter time\"/>\n                            </Col>\n                        </Form.Row>\n                        <br></br>\n                        <Form.Row>\n                            <Form.Label column sm=\"3\">Enter a location for your post</Form.Label>\n                            <Form.Check inline text=\"dark\" type=\"checkbox\" label=\"No location\"/>\n                        </Form.Row>\n                        <Form.Row>\n                            <Col sm={7}>\n                                <Form.Control\n                                    type=\"text\"\n                                    onChange={e => this.onTextInputChange(\"eventLocation\", e)}\n                                    value={eventLocation}\n                                    placeholder=\"Enter location\"/>\n                            </Col>\n                        </Form.Row>\n                    </Form>\n                    <br/>\n                    <Button onClick={this.startUpload}>Upload</Button>\n                </div>\n            );\n        }\n\n    }\n\n    render() {\n        return (\n          <div>\n              { this.renderSelector() }\n              { this.waiter.renderStatus() }\n          </div>\n        );\n    }\n\n}\n\nexport default UploadPage;\n"]},"metadata":{},"sourceType":"module"}