{"ast":null,"code":"var _jsxFileName = \"/Users/brianbalayon/Projects/442projects-loopholes/frontend/src/components/uploadWait.js\";\nimport React from \"react\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\n\nclass UploadWait extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: \"\"\n    };\n    this.setState({\n      progress: \"waiting\"\n    });\n  }\n\n  startLoad() {\n    //alert(\"hi\");\n    this.setState({\n      progress: \"loading\"\n    });\n    alert(this.state.progress);\n  }\n\n  endLoad(i) {\n    if (i === 0) {\n      this.setState({\n        progress: \"done\"\n      }); //alert(\"Nice\")\n    } else {\n      this.setState({\n        progress: \"failed\"\n      }); //alert(\"Oh\")\n    }\n  }\n\n  renderStatus() {\n    if (this.state.progress === \"waiting\") {\n      return null;\n    }\n\n    if (this.state.progress === \"loading\") {\n      return React.createElement(\"div\", {\n        className: \"load_overlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Loading...\")));\n    } else if (this.state.progress === \"done\") {\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Upload Complete!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \" Go to the homepage to see your upload! \"), React.createElement(Link, {\n        to: \"/CSE442-542/2019-Fall/cse-442i/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setState({\n          progress: \"waiting\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Home\"))));\n    } else {\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Upload Failed\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" Try uploading again! \"), React.createElement(Link, {\n        to: \"/CSE442-542/2019-Fall/cse-442i/upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setState({\n          progress: \"waiting\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Upload\")), React.createElement(Link, {\n        to: \"/CSE442-542/2019-Fall/cse-442i/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setState({\n          progress: \"waiting\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Home\"))));\n    }\n  }\n\n}\n\nexport default UploadWait;","map":{"version":3,"sources":["/Users/brianbalayon/Projects/442projects-loopholes/frontend/src/components/uploadWait.js"],"names":["React","Spinner","Button","Link","Jumbotron","Container","UploadWait","Component","constructor","props","state","progress","setState","startLoad","alert","endLoad","i","renderStatus"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport {Link} from 'react-router-dom';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\n\n\nclass UploadWait extends React.Component {\n\n    state = {\n        progress: \"\",\n    };\n\n    constructor(props) {\n        super(props);\n        this.setState({progress: \"waiting\"});\n    }\n\n    startLoad() {\n        //alert(\"hi\");\n        this.setState({progress: \"loading\"});\n        alert(this.state.progress);\n    }\n\n    endLoad(i) {\n        if (i === 0) {\n            this.setState({progress: \"done\"});\n            //alert(\"Nice\")\n        } else {\n            this.setState({progress: \"failed\"});\n            //alert(\"Oh\")\n        }\n    }\n\n    renderStatus() {\n        if (this.state.progress === \"waiting\") {\n            return null;\n        }\n        if (this.state.progress === \"loading\") {\n            return (\n                <div className={\"load_overlay\"}>\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </div>\n            );\n        } else if (this.state.progress === \"done\") {\n            return (\n                <Jumbotron fluid>\n                    <Container>\n                        <h1>Upload Complete!</h1>\n                        <p> Go to the homepage to see your upload! </p>\n                        <Link to=\"/CSE442-542/2019-Fall/cse-442i/home\">\n                            <Button onClick={this.setState({progress: \"waiting\"})}>Home</Button>\n                        </Link>\n                    </Container>\n                </Jumbotron>\n            );\n        } else {\n            return (\n                <Jumbotron fluid>\n                    <Container>\n                        <h1>Upload Failed</h1>\n                        <p> Try uploading again! </p>\n                        <Link to=\"/CSE442-542/2019-Fall/cse-442i/upload\">\n                            <Button onClick={this.setState({progress: \"waiting\"})}>Upload</Button>\n                        </Link>\n                        <Link to=\"/CSE442-542/2019-Fall/cse-442i/home\">\n                            <Button onClick={this.setState({progress: \"waiting\"})}>Home</Button>\n                        </Link>\n                    </Container>\n                </Jumbotron>\n            );\n        }\n    }\n\n}\n\nexport default UploadWait;\n"]},"metadata":{},"sourceType":"module"}